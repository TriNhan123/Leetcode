class Solution:
    def openLock(self, deadends: List[str], target: str) -> int:
        def neighbors(code): 
            res = []
            for i, ch in enumerate(code): 
                num = int(ch)
                #0 - 1 % 10 = 9
                counter = code[:i] + str((num - 1) % 10) + code[i + 1:]
                clockwise = code[:i] + str((num + 1) % 10) + code[i + 1:]
                res.append(clockwise)
                res.append(counter)
            return res 
        q = deque(["0000"])
        visit = set()
        dead = set(deadends)
        turns = 0 
        while q: 
            for i in range(len(q)): 
                code = q.popleft() 
                if code == target: 
                    return turns 
                if code in dead: continue
                for nei in neighbors(code): 
                    if nei in visit: continue
                    q.append(nei) 
                    visit.add(nei)
            turns += 1 
        return -1
