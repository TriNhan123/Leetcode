# """
# This is BinaryMatrix's API interface.
# You should not implement it, or speculate about its implementation
# """
#class BinaryMatrix(object):
#    def get(self, row: int, col: int) -> int:
#    def dimensions(self) -> list[]:

class Solution:
    def leftMostColumnWithOne(self, binaryMatrix: 'BinaryMatrix') -> int:
        # each row is sorted 
        # Binary Search to find the left most 1 of each row 
        ans = float("inf")
        ROWS, COLS = binaryMatrix.dimensions()
        for r in range(ROWS): 
            left, right = 0, COLS - 1 
            while left < right: 
                mid = (left + right) // 2 
                if binaryMatrix.get(r, mid) == 1:
                    right = mid 
                else: 
                    left = mid + 1 
            # return left (this is at left most 1 now)
            if binaryMatrix.get(r, left) == 1 : 
                ans = min(ans, left)
        return ans if ans != float("inf") else -1
