O(N), O(1)  
    def findKthLargest(self, nums: List[int], k: int) -> int:
        k = len(nums) - k 
        
        def quickSelect(L, R):
            if L >= R: return nums[L]
            pivot = random.randint(L, R) 
            pivotVal = nums[pivot]
            nums[R], nums[pivot] = nums[pivot], nums[R]
            p = L
            for i in range(L, R): 
                if nums[i] < pivotVal: 
                    nums[i], nums[p] = nums[p], nums[i]
                    p += 1 
            nums[R], nums[p] = nums[p], nums[R]
            
            if p > k: return quickSelect(L, p - 1) 
            elif p < k: return quickSelect(p + 1, R) 
            return nums[p]
        return quickSelect(0, len(nums) - 1)
