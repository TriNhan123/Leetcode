    def simplifyPath(self, path: str) -> str:
        stack = [] 
        for portion in path.split("/"):
            if portion == "..": 
                if stack: 
                    stack.pop() 
            elif portion == "." or portion == "": 
                continue 
            else: 
                stack.append(portion) 
            print(stack)
        return "/" + "/".join(stack)
------------------------------------------------------------------------
    def simplifyPath(self, path: str) -> str:
        answer = ''
        to_go_back = 0 # the number of directories to 'pop'
        path = path.split('/')
        for i in range(len(path)-1, -1, -1):
            dir = path[i]
            if dir == '' or dir == '.':
                continue
            elif dir == '..':
                to_go_back += 1
            elif to_go_back != 0: 
                to_go_back -= 1
            else:
                answer = '/' + dir + answer
        return answer if answer else '/' 
------------------------------------------------------------------------
variation: 
current                 change              output
/                       /foo                /foo
/baz                    /bar                /bar
/x/y                    ../p/../q           /x/q
/fb/anin                ../abc/def          /facebook/abc/def

    def change_path(current: str, changed: str) -> str:
        if not changed:
            return current
        if changed[0] == "/":
            current = ""

        path = []

        for segment in (current + "/" + changed).split("/"):
            if segment == "..":
                if path:
                    path.pop()
            elif segment and segment != ".":
                path.append(segment)

        return "/" + "/".join(path)
