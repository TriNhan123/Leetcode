  def generateParenthesis(self, n: int) -> List[str]:
        ans = []
        def backtrack(s, open, close): 
            if len(s) == n * 2: 
                ans.append(''.join(s))
            if open < n: 
                s.append("(")
                backtrack(s, open + 1, close) 
                s.pop() 
            if close < open: 
                s.append(")")
                backtrack(s, open, close + 1) 
                s.pop() 
        backtrack([], 0, 0) 
        return ans
