"""
# Definition for a Node.
class Node(object):
    def __init__(self, val=0, left=None, right=None, next=None):
        self.val = val
        self.left = left
        self.right = right
        self.next = next
"""

class Solution(object):
    def connect(self, root):
        """
        :type root: Node
        :rtype: Node
        """
        if not root: return root 
        q = collections.deque() 
        q.append(root) 
        
        while q: 
            n = len(q)
            tail = None
            for i in range(n): 
                current = q.popleft()
                
                
                if current.left: 
                    q.append(current.left)
                if current.right: 
                    q.append(current.right)
                    
                if tail: 
                    tail.next = current
                tail = current 
        return root 
            
