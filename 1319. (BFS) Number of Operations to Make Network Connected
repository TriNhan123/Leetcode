class Solution:
    def makeConnected(self, n: int, connections: List[List[int]]) -> int:
       # connection[x] : nhung node connect voi no
    
        adj = collections.defaultdict(set)
        for u, v in connections:
            adj[u].add(v)
            adj[v].add(u)
            
        visited = set()
        
        component = 0
        extra = 0
        for i in range(n):
            if i not in visited:
                component += 1
                queue = collections.deque()
                queue.append(i)
                visited.add(i)
                while queue:
                    node = queue.popleft()
                    for target in adj[node]:
                        adj[target].remove(node)
                        if target in visited:
                            extra += 1
                        else:
                            queue.append(target)
                            visited.add(target)
                            
        if extra >= component -1:
            return component - 1
        return -1
