class Solution:
    def minAreaRect(self, points: List[List[int]]) -> int:
        set_points = set(map(tuple, points))
        dx = collections.defaultdict(list)
        dy = collections.defaultdict(list)
        for x,y in points:
            dx[x].append(y)
            dy[y].append(x)
        sorted(dx.keys())
        res = float("inf")
        #find x1
        for x1 in dx: 
            #find y1 from dx[x1]
            for i in range(len(dx[x1])): 
                y1 = dx[x1][i]
                #find y2 in dx[x1]
                for j in range(i + 1, len(dx[x1])): 
                    y2 = dx[x1][j]
                    #find x2 from dy[y2]
                    for x2 in dy[y2]: 
                        #make sure x1, x2 in order and (x2, y1) exists in points
                        if x2 > x1 and (x2, y1) in set_points: 
                            res = min(res, (x2 - x1) * abs(y1 - y2))
        return res if res != float('inf') else 0
