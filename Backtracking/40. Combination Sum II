#use the same code from Combination Sum 1 
class Solution:
    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:
        canidates = candidates.sort() 
        comb = []
        ans = []
        def dfs(i, total): 
            if total == target: 
                ans.append(comb.copy())
                return 
            if i >= len(candidates) or total > target: 
                return 
            comb.append(candidates[i])
            #move to next element since we can only use each element once
            dfs(i + 1, total + candidates[i])
            
             
            comb.pop()
            while i + 1 < len(candidates) and candidates[i] == candidates[i + 1]: 
                i += 1
            dfs(i + 1, total) 
        
        dfs(0, 0)
        return ans 
