class Solution:
    def depth(self, node):
        if not node: 
            return 0
        return 1 + max(self.depth(node.left), self.depth(node.right))
    def isBalanced(self, root: Optional[TreeNode]) -> bool: 
        if not root:
            return True 
        left = self.depth(root.left) 
        right = self.depth(root.right) 
        if abs(left - right) > 1: 
            return False 
        return self.isBalanced(root.left) and self.isBalanced(root.right)
